group = 'dev.odo.java-openliberty.samples'
description = 'OpenLiberty Application Stack Primer'

// Repositories to use.
repositories {
    mavenCentral()
}

// Plugins.
apply plugin: 'war'
apply plugin: 'liberty'

// Java properties.
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

// Software dependencies.
dependencies {
    providedCompile 'org.eclipse.microprofile:microprofile:3.3'   
    providedCompile 'jakarta.platform:jakarta.jakartaee-api:8.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'org.microshed:microshed-testing-liberty:0.9'
    testImplementation 'io.rest-assured:rest-assured:4.2.0'
    testImplementation 'org.slf4j:slf4j-log4j12:1.7.29'
}

// Liberty-gradle-plugin.
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.openliberty.tools:liberty-gradle-plugin:3.1'
    }
}

// Open Liberty definitions.
liberty {
    runtime = ['group':'io.openliberty','name':'openliberty-kernel','version':System.getProperty("liberty.runtime.version")]
}

// Test definitions.
test {
    useJUnitPlatform()

    reports.html.destination = file("$buildDir/reports/unit")
    reports.junitXml.destination = file("$buildDir/test-results/unit")
    testLogging {
            displayGranularity 1
            showStandardStreams = true
            showStackTraces = true
            exceptionFormat = 'full'
            events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

// Task dependencies.
test.dependsOn 'libertyStart'
clean.dependsOn 'libertyStop'

